
.container
{
   display: grid;
   gap: 20px;
   grid-template-columns: repeat(4, 1fr);
   grid-template-rows: repeat(4, 1fr);
} 

/*
   ? grid-column-start:<number> ==> desde donde inicia 
   ? grid-column-end: <number> ==> donde acaba
   * ==/=> estos indican la pocicion de donde va el elemento. con esto podemos posicionar elementods 1 a 1
   ?grid-row-start: 2;
   ?grid-row-end: 3;
   * ==/==> estos cases ya es por las filas
*/

.container > div.item
{
   /** Area*/
   /*
   ! grid-column-start: 2;
   ! grid-column-end: 4;
   Para quitarse toda esa escritura... podemos hacer lo siguiente
   grid-column: 2/4;
    ! grid-row-start: 2;
    ! grid-row-end: 4;
      y del mismo modo por aca
   grid-row: 2/-1 ;
   */

   grid-area: 2/2/-1/4;
   /* esto aun se puede simplificar con 
   grid-area: <row Start> / <column start> / <row end> / <column end> ;
   */
   /* * Span*/
   grid-column: 1/span 2;
   /*
   * el 'span' tambien se puede usar directamente con 'grid-column: span N' y asi desde su pocicion original se estira tanto como la grilla lo solicite
   * esto funciona tanto en column como en row
   */
}
